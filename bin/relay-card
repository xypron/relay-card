#!/usr/bin/python3

"""Control Waveshare Relaycard
SPDX-License-Identifier: BSD-2-Clause
Copyright 2019 Heinrich Schuchardt <xypron.glpk@gmx.de>
"""

import sys
import time
import lgpio

ACTIVE_LOW = 2
relays = {
        '1' : 26,
        '2' : 20,
        '3' : 21
    }

def usage():
    """Print usage instruction"""
    print('Control Waveshare RPi Relay Board')
    print('Usage:')
    print('init                     - initialize relay card')
    print('relay-card off [1|2|3]   - switch relay off')
    print('relay-card on [1|2|3]    - switch relay on')
    print('relay-card flash [1|2|3] - switch relay on for 1 second')
    print('relay-card reset [1|2|3] - switch relay off for 3 seconds')
    sys.exit(1)

def init():
    """Switch the relevant GPIOs to output and switch the relays off"""
    ctx = lgpio.gpiochip_open(0)
    for _, gpio in relays.items():
        try:
            lgpio.gpio_claim_output(ctx, gpio)
            lgpio.gpio_write(ctx, gpio, 1)
        except lgpio.error as exception:
            print(exception)
            sys.exit(1)

def off(gpio):
    """Switch a relay off"""
    ctx = lgpio.gpiochip_open(0)
    lgpio.gpio_claim_output(ctx, gpio)
    lgpio.gpio_write(ctx, gpio, 1)

def on(gpio):
    """Switch a relay on"""
    ctx = lgpio.gpiochip_open(0)
    lgpio.gpio_claim_output(ctx, gpio)
    lgpio.gpio_write(ctx, gpio, 0)

def flash(gpio):
    """witch a relay on for 1 second"""
    ctx = lgpio.gpiochip_open(0)
    lgpio.gpio_claim_output(ctx, gpio)
    lgpio.gpio_write(ctx, gpio, 0)
    time.sleep(1)
    lgpio.gpio_write(ctx, gpio, 1)

def reset(gpio):
    """Switch a relay off for 3 seconds"""
    ctx = lgpio.gpiochip_open(0)
    lgpio.gpio_claim_output(ctx, gpio)
    lgpio.gpio_write(ctx, gpio, 1)
    time.sleep(3)
    lgpio.gpio_write(ctx, gpio, 0)

def main():
    """Command line entry point"""
    argc = len(sys.argv)
    if argc < 2 or argc > 3:
        usage()

    cmd = sys.argv[1]

    if argc == 3:
        try:
            gpio = relays[sys.argv[2]]
        except KeyError:
            usage()
    else:
        gpio = relays['1']

    if cmd == 'off':
        off(gpio)
    elif cmd == 'on':
        on(gpio)
    elif cmd == 'flash':
        flash(gpio)
    elif cmd == 'init':
        init()
    elif cmd == 'reset':
        reset(gpio)
    else:
        usage()

if __name__ == "__main__":
    main()
